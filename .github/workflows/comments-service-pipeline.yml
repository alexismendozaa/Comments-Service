name: CI-CD Comments Microservices

on:
  push:
    branches: [main, test]
    paths:
      - 'add-comment-ms/add-comment-ms/**'
      - 'delete-comment-ms/delete-comment-ms/**'
      - 'edit-comment-ms/edit-comment-ms/**'
      - 'list-comment-ms/list-comment-ms/**'
  pull_request:
    branches: [main]
    paths:
      - 'add-comment-ms/add-comment-ms/**'
      - 'delete-comment-ms/delete-comment-ms/**'
      - 'edit-comment-ms/edit-comment-ms/**'
      - 'list-comment-ms/list-comment-ms/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  #### 1. TESTS ####
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - add-comment-ms
          - delete-comment-ms
          - edit-comment-ms
          - list-comment-ms
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Run static check
        if: steps.changes.outputs.changed == 'true'
        run: bash ${{ matrix.service }}/${{ matrix.service }}/tests/check-static.sh

  #### 2. BUILD ####
  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        service:
          - add-comment-ms
          - delete-comment-ms
          - edit-comment-ms
          - list-comment-ms
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        if: steps.changes.outputs.changed == 'true'
        run: |
          docker build -t alexismendozaa/${{ matrix.service }}:latest ./${{ matrix.service }}/${{ matrix.service }}

      - name: Save Docker image artifact
        if: steps.changes.outputs.changed == 'true'
        run: docker save alexismendozaa/${{ matrix.service }}:latest -o ${{ matrix.service }}.tar

      - uses: actions/upload-artifact@v4
        if: steps.changes.outputs.changed == 'true'
        with:
          name: ${{ matrix.service }}-image
          path: ${{ matrix.service }}.tar

  #### 3. PUSH ####
  push:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        service:
          - add-comment-ms
          - delete-comment-ms
          - edit-comment-ms
          - list-comment-ms
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes for service
        id: changes
        run: |
          git fetch --prune --unshallow || git fetch --all
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            git fetch origin ${{ github.base_ref }}
            CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          else
            CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep "^${{ matrix.service }}/${{ matrix.service }}/" || true)
          fi
          if [[ -n "$CHANGED" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - uses: actions/download-artifact@v4
        if: steps.changes.outputs.changed == 'true'
        with:
          name: ${{ matrix.service }}-image

      - name: Load Docker image
        if: steps.changes.outputs.changed == 'true'
        run: docker load -i ${{ matrix.service }}.tar

      - name: Login to Docker Hub
        if: steps.changes.outputs.changed == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        if: steps.changes.outputs.changed == 'true'
        run: docker push alexismendozaa/${{ matrix.service }}:latest

  #### 4. DEPLOY TEST ####
  deploy_test:
    runs-on: ubuntu-latest
    needs: push
    if: github.ref == 'refs/heads/test'
    strategy:
      matrix:
        service:
          - add-comment-ms
          - delete-comment-ms
          - edit-comment-ms
          - list-comment-ms
    steps:
      - uses: actions/checkout@v4
      - name: Deploy updated microservice to EC2 TEST via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_QA }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY_QA }}
          port: 22
          script: |
            docker rm -f ${{ matrix.service }} || true

            export DB_COMMENTS='${{ secrets.DB_COMMENTS }}'
            export DB_HOST='${{ secrets.DB_HOST }}'
            export DB_NAME='${{ secrets.DB_NAME }}'
            export DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            export DB_PORT='${{ secrets.DB_PORT }}'
            export DB_SSL='${{ secrets.DB_SSL }}'
            export DB_USER='${{ secrets.DB_USER }}'
            export DB_USERS='${{ secrets.DB_USERS }}'
            export JWT_SECRET='${{ secrets.JWT_SECRET }}'
            export DB_CONNECTION_STRING='${{ secrets.DB_CONNECTION_STRING}}'

            if [ "${{ matrix.service }}" = "add-comment-ms" ]; then
              docker run -d --name add-comment-ms \
                -p 5019:3019 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/add-comment-ms:latest

            elif [ "${{ matrix.service }}" = "delete-comment-ms" ]; then
              docker run -d --name delete-comment-ms \
                -p 5021:3021 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                -e DB_CONNECTION_STRING=$DB_CONNECTION_STRING \
                alexismendozaa/delete-comment-ms:latest

            elif [ "${{ matrix.service }}" = "edit-comment-ms" ]; then
              docker run -d --name edit-comment-ms \
                -p 5020:3020 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/edit-comment-ms:latest

            elif [ "${{ matrix.service }}" = "list-comment-ms" ]; then
              docker run -d --name list-comment-ms \
                -p 5022:3022 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/list-comment-ms:latest
            fi

  #### 5. DEPLOY PROD ####
  deploy_prod:
    runs-on: ubuntu-latest
    needs: push
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        service:
          - add-comment-ms
          - delete-comment-ms
          - edit-comment-ms
          - list-comment-ms
    steps:
      - uses: actions/checkout@v4
      - name: Deploy updated microservice to EC2 PROD via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PROD }}
          username: ubuntu
          key: ${{ secrets.SSH_KEY_PROD }}
          port: 22
          script: |
            docker rm -f ${{ matrix.service }} || true

            export DB_COMMENTS='${{ secrets.DB_COMMENTS }}'
            export DB_HOST='${{ secrets.DB_HOST }}'
            export DB_NAME='${{ secrets.DB_NAME }}'
            export DB_PASSWORD='${{ secrets.DB_PASSWORD }}'
            export DB_PORT='${{ secrets.DB_PORT }}'
            export DB_SSL='${{ secrets.DB_SSL }}'
            export DB_USER='${{ secrets.DB_USER }}'
            export DB_USERS='${{ secrets.DB_USERS }}'
            export JWT_SECRET='${{ secrets.JWT_SECRET }}'
            export DB_CONNECTION_STRING='${{ secrets.DB_CONNECTION_STRING}}'

            if [ "${{ matrix.service }}" = "add-comment-ms" ]; then
              docker run -d --name add-comment-ms \
                -p 5019:3019 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/add-comment-ms:latest

            elif [ "${{ matrix.service }}" = "delete-comment-ms" ]; then
              docker run -d --name delete-comment-ms \
                -p 5021:3021 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                -e DB_CONNECTION_STRING=$DB_CONNECTION_STRING \
                alexismendozaa/delete-comment-ms:latest

            elif [ "${{ matrix.service }}" = "edit-comment-ms" ]; then
              docker run -d --name edit-comment-ms \
                -p 5020:3020 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/edit-comment-ms:latest

            elif [ "${{ matrix.service }}" = "list-comment-ms" ]; then
              docker run -d --name list-comment-ms \
                -p 5022:3022 \
                -e DB_COMMENTS=$DB_COMMENTS \
                -e DB_HOST=$DB_HOST \
                -e DB_NAME=$DB_NAME \
                -e DB_PASSWORD=$DB_PASSWORD \
                -e DB_PORT=$DB_PORT \
                -e DB_SSL=$DB_SSL \
                -e DB_USER=$DB_USER \
                -e DB_USERS=$DB_USERS \
                -e JWT_SECRET=$JWT_SECRET \
                alexismendozaa/list-comment-ms:latest
            fi
